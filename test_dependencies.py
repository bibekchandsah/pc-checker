#!/usr/bin/env python3
"""
Test script to verify all dependencies work correctly
Run this before compiling to catch issues early
"""

import sys

def test_imports():
    """Test all required imports"""
    print("Testing dependencies...")
    
    try:
        print("‚úì Testing basic Python modules...")
        import os
        import sys
        import json
        import csv
        import tempfile
        from datetime import datetime
        print("  ‚úì Basic modules OK")
        
        print("‚úì Testing PySide6...")
        from PySide6.QtWidgets import QApplication
        from PySide6.QtCore import Qt, QTimer, QThread, Signal
        from PySide6.QtGui import QFont, QPixmap, QIcon
        print("  ‚úì PySide6 OK")
        
        print("‚úì Testing system info modules...")
        import psutil
        print("  ‚úì psutil OK")
        
        import py_cpuinfo
        print("  ‚úì py_cpuinfo OK")
        
        # Test multiprocessing (the problematic one)
        import multiprocessing
        import multiprocessing.pool
        print("  ‚úì multiprocessing OK")
        
        print("‚úì Testing Windows-specific modules...")
        try:
            import wmi
            print("  ‚úì wmi OK")
        except ImportError:
            print("  ‚ö† wmi not available (Linux/Mac?)")
        
        print("‚úì Testing network modules...")
        import requests
        import packaging
        print("  ‚úì Network modules OK")
        
        print("‚úì Testing custom modules...")
        try:
            from hardware_info import HardwareInfo
            print("  ‚úì hardware_info OK")
        except ImportError as e:
            print(f"  ‚úó hardware_info failed: {e}")
            
        try:
            from os_info import OSInfo
            print("  ‚úì os_info OK")
        except ImportError as e:
            print(f"  ‚úó os_info failed: {e}")
            
        try:
            from system_tests import SystemTests
            print("  ‚úì system_tests OK")
        except ImportError as e:
            print(f"  ‚úó system_tests failed: {e}")
        
        print("\n" + "="*50)
        print("‚úÖ ALL CORE DEPENDENCIES WORKING!")
        print("‚úÖ Ready for compilation!")
        print("="*50)
        return True
        
    except ImportError as e:
        print(f"\n‚ùå DEPENDENCY ERROR: {e}")
        print("‚ùå Please install missing dependencies before compiling")
        print("Run: pip install -r requirements.txt")
        return False
    except Exception as e:
        print(f"\n‚ùå UNEXPECTED ERROR: {e}")
        return False

def test_cpu_info():
    """Test CPU info specifically (the source of multiprocessing error)"""
    print("\nTesting CPU info functionality...")
    try:
        import py_cpuinfo
        info = py_cpuinfo.get_cpu_info()
        print(f"‚úì CPU detected: {info.get('brand_raw', 'Unknown')}")
        print(f"‚úì Architecture: {info.get('arch', 'Unknown')}")
        print(f"‚úì Cores: {info.get('count', 'Unknown')}")
        return True
    except Exception as e:
        print(f"‚ùå CPU info test failed: {e}")
        return False

def main():
    print("="*60)
    print("Laptop Testing Program - Dependency Test")
    print("="*60)
    
    if not test_imports():
        sys.exit(1)
    
    if not test_cpu_info():
        print("‚ö† CPU info test failed, but compilation might still work")
    
    print("\nüéâ All tests passed! You can now compile the application.")
    input("\nPress Enter to exit...")

if __name__ == "__main__":
    main()